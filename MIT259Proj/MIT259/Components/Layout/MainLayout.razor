@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@implements IDisposable

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
         <AuthorizeView>
        <NotAuthorized>
        <div class="top-row px-4">
                <NavLink class="nav-link" href="Account/Login">
                        <span class="bii bi-person-badge-nav-menu" aria-hidden="true"></span>Login
                </NavLink>
        </div>
        </NotAuthorized>
        <Authorized>
            <div class="top-row px-4">
                <form action="Account/Logout" method="post">
                    <AntiforgeryToken />
                    <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                    <button type="submit" class="nav-link" style="border: none; background-color: transparent;">
                            <span class="bii bi-arrow-bar-left-nav-menu" aria-hidden="true"></span>Logout
                    </button>
                </form>
            </div>
        </Authorized>
        </AuthorizeView>

        <article class="content px-4">
            <CascadingAuthenticationState>
            @Body
            </CascadingAuthenticationState>
        </article>
    </main>
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code{
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }
    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }
    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}
